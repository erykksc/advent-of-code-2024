2, 4: B = A % 8
1, 3: B = B XOR 3
7, 5: C = A/2^B
0, 3: A = A/8
4, 1: B = B XOR C
1, 5: B = B XOR 5
5, 5: out(B % 8)
3, 0: if A=0 { return} else{ jump to 0}

// outputs 3 last bits of A, mixed
while A!=0{
	B = A % 8 // B becomes the last 3 bits of A
	B = B XOR 3 // B XOR 3 (3 last bits of A change value)
	C = A/2^B // C becomes A shifted to right by various amount 0-3 bits
	A = 3>>A // A is shifted 3 bits to the right, A loses 3 least significant bits
	B = B XOR C // B becomes random value based generally on 3 last bits of A
	B = B XOR 5 // B changes value
	out( B%8 ) // last 3 bits of B are outputed
}
